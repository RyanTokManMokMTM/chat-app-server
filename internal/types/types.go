// Code generated by goctl. DO NOT EDIT.
package types

type HealthCheckReq struct {
}

type HealthCheckResp struct {
	Resp string `json:"resp"`
}

type SignUpReq struct {
	Email    string `json:"email" validate:"email,min=8,max=32"`
	Name     string `json:"name" validate:"min=8,max=16"`
	Password string `json:"password" validate:"min=8,max=32"`
}

type SignUpResp struct {
	Code        uint   `json:"code"`
	Token       string `json:"token"`
	ExpiredTime uint   `json:"expired_time"`
}

type SignInReq struct {
	Email    string `json:"email" validate:"email,min=8,max=32"`
	Password string `json:"password" validate:"min=8,max=32"`
}

type SignInResp struct {
	Code        uint   `json:"code"`
	Token       string `json:"token"`
	ExpiredTime uint   `json:"expired_time"`
}

type GetUserInfoReq struct {
	UserID uint `path:"user_id"`
}

type GetUserInfoResp struct {
	Code   uint   `json:"code"`
	UUID   string `json:"uuid"`
	Name   string `json:"name"`
	Email  string `json:"email"`
	Avatar string `json:"avatar"`
}

type UpdateUserInfoReq struct {
	Name string `json:"name" validate:"min=8,max=32"`
}

type UpdateUserInfoResp struct {
	Code uint `json:"code"`
}

type UploadUserAvatarReq struct {
}

type UploadUserAvatarResp struct {
	Code uint   `json:"code"`
	Path string `json:"path"`
}

type AddFriendReq struct {
	UserID uint `json:"user_id"`
}

type AddFriendResp struct {
	Code uint `json:"code"`
}

type DeleteFriendReq struct {
	UserID uint `json:"user_id"`
}

type DeleteFriendResp struct {
	Code uint `json:"code"`
}

type GetFriendListReq struct {
}

type GetFriendListResp struct {
	FriendList []FriendInfo `json:"friend_list"`
}

type FriendInfo struct {
	ID       uint   `json:"user_id"`
	UUID     string `json:"uuid"`
	NickName string `json:"name"`
	Avatar   string `json:"avatar"`
}
