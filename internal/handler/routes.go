// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	friend "github.com/ryantokmanmok/chat-app-server/internal/handler/friend"
	health "github.com/ryantokmanmok/chat-app-server/internal/handler/health"
	user "github.com/ryantokmanmok/chat-app-server/internal/handler/user"
	"github.com/ryantokmanmok/chat-app-server/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/ping",
				Handler: health.HealthCheckHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/user/signup",
				Handler: user.UserSignUpHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/signin",
				Handler: user.UserSignInHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/user/info/:user_id",
				Handler: user.GetUserInfoHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPatch,
				Path:    "/user/info",
				Handler: user.UpdateUserInfoHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/avatar",
				Handler: user.UploadUserAvatarHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/api/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/user/friend",
				Handler: friend.AddFriendHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/user/friend",
				Handler: friend.DeleteFriendReqHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/user/friends",
				Handler: friend.GetFriendListHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/api/v1"),
	)
}
