syntax = "v1"
import "desc/user.api"
import "desc/friend.api"
import "desc/group.api"
import "desc/message.api"
import "desc/file.api"
import "desc/story.api"

info(
	title: "chat-app-router"
	desc: "A router for a chat-app"
	author: "Jackson.tmm"
	email: "ryantokmanmokmtm@hotmail.com"
	version: "v1"
)

type (
	HealthCheckReq  struct{}
	HealthCheckResp {
		Resp string `json:"resp"`
	}
)

type (
	CommonUserInfo {
		ID            uint   `json:"id,omitempty"`
		Uuid          string `json:"uuid,omitempty"`
		NickName      string `json:"name,omitempty"`
		Avatar        string `json:"avatar,omitempty"`
		Email         string `json:"email,omitempty"`
		Cover         string `json:"cover,omitempty"`
		StatusMessage string `json:"status"`
	}
)

@server (
	group: health
	prefix: /api/v1
)
service  ChatApp {
	@doc (
		summary : "Server Health check - get a poing message if the router is alive.'"
	)
	@handler HealthCheck
	get /ping(HealthCheckReq) returns (HealthCheckResp)
}