// Code generated by goctl. DO NOT EDIT.
// Source: assets.proto

package assetrpc

import (
	"context"

	"api/app/assets/cmd/rpc/types/assets_api"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	UploadFileReq   = assets_api.UploadFileReq
	UploadFileResp  = assets_api.UploadFileResp
	UploadImageReq  = assets_api.UploadImageReq
	UploadImageResp = assets_api.UploadImageResp

	AssetRPC interface {
		UploadImage(ctx context.Context, opts ...grpc.CallOption) (assets_api.AssetRPC_UploadImageClient, error)
		UploadFile(ctx context.Context, opts ...grpc.CallOption) (assets_api.AssetRPC_UploadFileClient, error)
	}

	defaultAssetRPC struct {
		cli zrpc.Client
	}
)

func NewAssetRPC(cli zrpc.Client) AssetRPC {
	return &defaultAssetRPC{
		cli: cli,
	}
}

func (m *defaultAssetRPC) UploadImage(ctx context.Context, opts ...grpc.CallOption) (assets_api.AssetRPC_UploadImageClient, error) {
	client := assets_api.NewAssetRPCClient(m.cli.Conn())
	return client.UploadImage(ctx, opts...)
}

func (m *defaultAssetRPC) UploadFile(ctx context.Context, opts ...grpc.CallOption) (assets_api.AssetRPC_UploadFileClient, error) {
	client := assets_api.NewAssetRPCClient(m.cli.Conn())
	return client.UploadFile(ctx, opts...)
}
