// Code generated by goctl. DO NOT EDIT.
// Source: core.proto

package server

import (
	"context"

	"github.com/ryantokmanmokmtm/chat-app-server/app/core/cmd/rpc/internal/logic/stickerservice"
	"github.com/ryantokmanmokmtm/chat-app-server/app/core/cmd/rpc/internal/svc"
	"github.com/ryantokmanmokmtm/chat-app-server/app/core/cmd/rpc/types/core"
)

type StickerServiceServer struct {
	svcCtx *svc.ServiceContext
	core.UnimplementedStickerServiceServer
}

func NewStickerServiceServer(svcCtx *svc.ServiceContext) *StickerServiceServer {
	return &StickerServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *StickerServiceServer) CreateStickerGroup(ctx context.Context, in *core.CreateStickerGroupReq) (*core.CreateStickerGroupResp, error) {
	l := stickerservicelogic.NewCreateStickerGroupLogic(ctx, s.svcCtx)
	return l.CreateStickerGroup(in)
}

func (s *StickerServiceServer) GetStickerGroupResources(ctx context.Context, in *core.GetStickerResourcesReq) (*core.GetStickerResourcesResp, error) {
	l := stickerservicelogic.NewGetStickerGroupResourcesLogic(ctx, s.svcCtx)
	return l.GetStickerGroupResources(in)
}

func (s *StickerServiceServer) GetStickerGroupInfo(ctx context.Context, in *core.GetStickerInfoReq) (*core.GetStickerInfoResp, error) {
	l := stickerservicelogic.NewGetStickerGroupInfoLogic(ctx, s.svcCtx)
	return l.GetStickerGroupInfo(in)
}

func (s *StickerServiceServer) GetStickerGroupList(ctx context.Context, in *core.GetStickerListReq) (*core.GetStickerListResp, error) {
	l := stickerservicelogic.NewGetStickerGroupListLogic(ctx, s.svcCtx)
	return l.GetStickerGroupList(in)
}
