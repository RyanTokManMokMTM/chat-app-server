// Code generated by goctl. DO NOT EDIT.
// Source: core.proto

package server

import (
	"context"

	"github.com/ryantokmanmokmtm/chat-app-server/app/core/cmd/rpc/internal/logic/friendservice"
	"github.com/ryantokmanmokmtm/chat-app-server/app/core/cmd/rpc/internal/svc"
	"github.com/ryantokmanmokmtm/chat-app-server/app/core/cmd/rpc/types/core"
)

type FriendServiceServer struct {
	svcCtx *svc.ServiceContext
	core.UnimplementedFriendServiceServer
}

func NewFriendServiceServer(svcCtx *svc.ServiceContext) *FriendServiceServer {
	return &FriendServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *FriendServiceServer) AddFriend(ctx context.Context, in *core.AddFriendReq) (*core.AddFriendResp, error) {
	l := friendservicelogic.NewAddFriendLogic(ctx, s.svcCtx)
	return l.AddFriend(in)
}

func (s *FriendServiceServer) DeleteFriend(ctx context.Context, in *core.DeleteFriendReq) (*core.DeleteFriendResp, error) {
	l := friendservicelogic.NewDeleteFriendLogic(ctx, s.svcCtx)
	return l.DeleteFriend(in)
}

func (s *FriendServiceServer) GetFriendList(ctx context.Context, in *core.GetFriendListReq) (*core.GetFriendListResp, error) {
	l := friendservicelogic.NewGetFriendListLogic(ctx, s.svcCtx)
	return l.GetFriendList(in)
}

func (s *FriendServiceServer) GetFriendInformation(ctx context.Context, in *core.GetFriendInfoReq) (*core.GetFriendInfoResp, error) {
	l := friendservicelogic.NewGetFriendInformationLogic(ctx, s.svcCtx)
	return l.GetFriendInformation(in)
}
