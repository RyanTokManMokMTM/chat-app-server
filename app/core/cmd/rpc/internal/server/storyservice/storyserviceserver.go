// Code generated by goctl. DO NOT EDIT.
// Source: core.proto

package server

import (
	"context"

	"github.com/ryantokmanmokmtm/chat-app-server/app/core/cmd/rpc/internal/logic/storyservice"
	"github.com/ryantokmanmokmtm/chat-app-server/app/core/cmd/rpc/internal/svc"
	"github.com/ryantokmanmokmtm/chat-app-server/app/core/cmd/rpc/types/core"
)

type StoryServiceServer struct {
	svcCtx *svc.ServiceContext
	core.UnimplementedStoryServiceServer
}

func NewStoryServiceServer(svcCtx *svc.ServiceContext) *StoryServiceServer {
	return &StoryServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *StoryServiceServer) AddStory(ctx context.Context, in *core.AddStoryReq) (*core.AddStoryResp, error) {
	l := storyservicelogic.NewAddStoryLogic(ctx, s.svcCtx)
	return l.AddStory(in)
}

func (s *StoryServiceServer) DeleteStory(ctx context.Context, in *core.DeleteStoryReq) (*core.DeleteStoryResp, error) {
	l := storyservicelogic.NewDeleteStoryLogic(ctx, s.svcCtx)
	return l.DeleteStory(in)
}

func (s *StoryServiceServer) GetUserStoriesByUserId(ctx context.Context, in *core.GetUserStoryReq) (*core.GetUserStoryResp, error) {
	l := storyservicelogic.NewGetUserStoriesByUserIdLogic(ctx, s.svcCtx)
	return l.GetUserStoriesByUserId(in)
}

func (s *StoryServiceServer) GetActiveStories(ctx context.Context, in *core.GetActiveStoryReq) (*core.GetActiveStoryResp, error) {
	l := storyservicelogic.NewGetActiveStoriesLogic(ctx, s.svcCtx)
	return l.GetActiveStories(in)
}

func (s *StoryServiceServer) UpdateStorySeen(ctx context.Context, in *core.UpdateStorySeenReq) (*core.UpdateStorySeenResp, error) {
	l := storyservicelogic.NewUpdateStorySeenLogic(ctx, s.svcCtx)
	return l.UpdateStorySeen(in)
}

func (s *StoryServiceServer) CreateStoryLike(ctx context.Context, in *core.CreateStoryLikeReq) (*core.CreateStoryLikeResp, error) {
	l := storyservicelogic.NewCreateStoryLikeLogic(ctx, s.svcCtx)
	return l.CreateStoryLike(in)
}

func (s *StoryServiceServer) DeleteStoryLike(ctx context.Context, in *core.DeleteStoryLikeReq) (*core.DeleteStoryLikeResp, error) {
	l := storyservicelogic.NewDeleteStoryLikeLogic(ctx, s.svcCtx)
	return l.DeleteStoryLike(in)
}

func (s *StoryServiceServer) GetStoryInfo(ctx context.Context, in *core.GetStoryInfoByIdRep) (*core.GetStoryInfoByIdResp, error) {
	l := storyservicelogic.NewGetStoryInfoLogic(ctx, s.svcCtx)
	return l.GetStoryInfo(in)
}

func (s *StoryServiceServer) GetStorySeenListInfo(ctx context.Context, in *core.GetStorySeenListReq) (*core.GetStorySeenListResp, error) {
	l := storyservicelogic.NewGetStorySeenListInfoLogic(ctx, s.svcCtx)
	return l.GetStorySeenListInfo(in)
}
